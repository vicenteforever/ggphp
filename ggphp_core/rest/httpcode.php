<?php

/**
 * HTTP状态码
 * @package rest
 * @author $goodzsq@gmail.com
 */
class rest_httpcode implements rest_interface {

    private $_data = array(
        '100' => array('继续', '请求者应当继续提出请求。服务器返回此代码表示已收到请求的第一部分，正在等待其余部分'),
        '101' => array('切换协议', '请求者已要求服务器切换协议，服务器已确认并准备切换'),
        '200' => array('成功', '服务器已成功处理了请求'),
        '201' => array('已创建', '请求成功并且服务器创建了新的资源'),
        '202' => array('已接受', '服务器已接受请求，但尚未处理'),
        '203' => array('非授权信息', '服务器已成功处理了请求，但返回的信息可能来自另一来源'),
        '204' => array('无内容', '服务器成功处理了请求，但没有返回任何内容'),
        '205' => array('重置内容', '服务器成功处理了请求，但没有返回任何内容，要求请求者重置文档视图'),
        '206' => array('部分内容', '服务器成功处理了部分 GET 请求'),
        '300' => array('多种选择', '针对请求，服务器可执行多种操作。服务器可根据请求者 (user-agent) 选择一项操作，或提供操作列表供请求者选择'),
        '301' => array('永久移动', '请求的网页已永久移动到新位置'),
        '302' => array('临时移动', '服务器目前从不同位置的网页响应请求，但申请人应当继续使用原有位置来响应以后的请求'),
        '303' => array('查看其他位置', '请求者应当对不同的位置使用单独的 GET 请求来检索响应时，服务器返回此代码。对于除 HEAD 之外的所有请求，服务器会自动转到其他位置'),
        '304' => array('未修改', '自从上次请求后，请求的网页未修改过。服务器返回此响应时，不会返回网页内容'),
        '305' => array('使用代理', '请求者只能使用代理访问请求的网页。如果服务器返回此响应，还表示请求者应当使用代理'),
        '306' => array('临时重定向', '服务器目前从不同位置的网页响应请求，但请求者应当继续使用原有位置来响应以后的请求'),
        '400' => array('错误请求', '服务器不理解请求的语法'),
        '401' => array('身份验证错误', '此页要求授权'),
        '403' => array('禁止', '服务器拒绝请求'),
        '404' => array('未找到', '服务器找不到请求的网页'),
        '405' => array('方法禁用', '禁用请求中指定的方法'),
        '406' => array('不接受', '无法使用请求的内容特性响应请求的网页'),
        '407' => array('需要代理授权', '此状态码与 401 类似，但指定请求者必须授权使用代理。如果服务器返回此响应，还表示请求者应当使用代理'),
        '408' => array('请求超时', '服务器等候请求时发生超时'),
        '409' => array('冲突', '服务器在完成请求时发生冲突。服务器必须在响应中包含有关冲突的信息。服务器在响应与前一个请求相冲突的 PUT 请求时可能会返回此代码，以及两个请求的差异列表'),
        '410' => array('已删除', '请求的资源永久删除后，服务器返回此响应'),
        '411' => array('需要有效长度', '服务器不接受不含有效内容长度标头字段的请求'),
        '412' => array('未满足前提条件', '服务器未满足请求者在请求中设置的其中一个前提条件'),
        '413' => array('请求实体过大', '服务器无法处理请求，因为请求实体过大，超出服务器的处理能力'),
        '414' => array('请求的 URI 过长', '请求的 URI（通常为网址）过长，服务器无法处理'),
        '415' => array('支持的媒体类型', '请求的格式不受请求页面的支持'),
        '416' => array('请求范围不符合要求', '如果页面无法提供请求的范围，则服务器会返回此状态码    '),
        '417' => array('未满足期望值', '服务器未满足"期望"请求标头字段的要求'),
        '500' => array('服务器内部错误', '服务器遇到错误，无法完成请求'),
        '501' => array('尚未实施', '服务器不具备完成请求的功能'),
        '502' => array('错误网关', '服务器作为网关或代理，从上游服务器收到无效响应'),
        '503' => array('服务不可用', '服务器目前无法使用（由于超载或停机维护）'),
        '504' => array('网关超时', '服务器作为网关或代理，但是没有及时从上游服务器收到请求'),
        '505' => array('HTTP 版本不受支持', '服务器不支持请求中所用的 HTTP 协议版本'),
    );

    public function delete($id) {
        
    }

    public function deleteAll() {
        
    }

    public function get($id) {
        if (isset($this->_data[$id])) {
            return $this->_data[$id];
        } else {
            return null;
        }
    }

    public function index($params = null) {
        return $this->_data;
    }

    public function post($id, $data) {
        
    }

    public function put($id, $data) {
        
    }

    public function struct() {
        
    }

}